@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.Extensions.Localization
@using X.PagedList.Mvc.Common
@using X.PagedList.Mvc.Core
@using X.PagedList.Mvc.Core.Common
@inject IStringLocalizer<SharedModelResource> SharedLocalizer
@model X.PagedList.IPagedList<TrainerExamListVM>

@{
    ViewData["Title"] = SharedLocalizer["All_Exam_List"];
}

<head>
    <link href="~/css/classroom-filter.css" rel="stylesheet" />
    <link href="~/newlayouts/dist/assets/plugins/global/plugins.bundle.css" rel="stylesheet" type="text/css" />
    <link href="~/newlayouts/dist/assets/css/style.bundle.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />

    
    <style>
        .ui-datepicker {
            font-family: 'Segoe UI', sans-serif;
            font-size: 14px;
            background: #fff;
            border: none;
            padding: 12px 16px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
            z-index: 9999 !important;
        }

        /* Başlık kısmı (ay ve yıl) */
        .ui-datepicker-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

        /* Ay ve yıl select’leri */
        .ui-datepicker select.ui-datepicker-month,
        .ui-datepicker select.ui-datepicker-year {
            font-size: 14px;
            padding: 4px 6px;
            border-radius: 4px;
            border: 1px solid #ddd;
            background-color: #f9f9f9;
            color: #333;
        }

        /* Önceki ve sonraki ay butonları */
        .ui-datepicker-prev, .ui-datepicker-next {
            cursor: pointer;
            background: none;
            border: none;
            color: #666;
            font-weight: bold;
            font-size: 16px;
            width: 28px;
            height: 28px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: background 0.2s;
            border-radius: 50%;
        }

            .ui-datepicker-prev:hover, .ui-datepicker-next:hover {
                background-color: #f1f1f1;
            }

        /* Gün isimleri */
        .ui-datepicker th {
            font-weight: 500;
            color: #4b4b4b;
            padding: 5px 0;
        }

        /* Gün kutuları */
        .ui-datepicker td {
            padding: 0;
        }

            .ui-datepicker td a {
                width: 36px;
                height: 36px;
                line-height: 36px;
                display: inline-block;
                text-align: center;
                text-decoration: none;
                color: #333;
                border-radius: 6px;
                transition: background 0.2s;
                margin: 2px;
            }

                /* Hover ve bugün */
                .ui-datepicker td a:hover {
                    background: #f1f5f9;
                }

        .ui-datepicker-today a {
            background-color: #e3f2fd !important;
            font-weight: bold;
            color: #007bff;
        }

        /* Seçili gün */
        .ui-datepicker .ui-state-active {
            background: #009EF7 !important;
            color: white !important;
        }

        /* Hücre kenar çizgilerini kaldır */
        .ui-datepicker table {
            border-collapse: separate;
            border-spacing: 0;
        }

        .ui-datepicker-close {
            display: none !important;
        }

        .ui-datepicker-buttonpane {
            display: flex;
            justify-content: space-between;
            padding: 0.3em;
        }

            .ui-datepicker-buttonpane button {
                background: none;
                border: none;
                color: #007bff;
                font-size: 14px;
                cursor: pointer;
                text-decoration: none;
                padding: 6px 12px;
                border-radius: 4px;
                transition: color 0.2s, background-color 0.2s;
            }

                .ui-datepicker-buttonpane button:hover {
                    background-color: #f1f1f1;
                    color: #0056b3;
                }

        .ui-datepicker-clear {
            order: -1; /* sola */
        }

        .ui-datepicker-close {
            display: none !important; /* istenmiyorsa */
        }
    </style> 

   
</head>

<section class="section dashboard m-0 h-100">
    <div class="card card-docs flex-row-fluid mb-2 p-0 h-100" id="kt_docs_content_card">
        <div class="card-body m-0 py-15 px-10 py-lg-15 px-lg-15 text-gray-700 d-flex flex-column">
            <div class="d-flex justify-content-between">

                <h5 style="display: flex; align-items: center;">
                    @SharedLocalizer["Exam_List"]

                    <span class="material-symbols-outlined" style="margin-left: 5px; font-size: 130%; " data-bs-toggle="tooltip" data-bs-placement="top" title="" data-bs-original-title="@SharedLocalizer["Exam_Filter_Warning"]">

                        info

                    </span>

                </h5>
            </div>
                <div class="d-flex flex-column h-100" data-kt-docs-table-toolbar="base">
                    <form class="formClassroom d-flex flex-column h-100" asp-area="Trainer" asp-controller="Exam" asp-action="GetExamsByStatus" method="post" onsubmit="return onSubmitForm()">
                        <div class="classroomfilter flex-row">
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-floating mb-2">
                                        <select class="form-select form-select-solid" data-control="select2" id="className" name="className">
                                            <option value="" disabled selected> @SharedLocalizer["Choose"]</option>
                                            @foreach (var item in ViewBag.className)
                                            {
                                                <option value="@item.Value" selected="@(item.Value == ViewBag.defaultClassroomId ? "selected" : null)">
                                                    @item.Text
                                                </option>
                                            }
                                        </select>
                                        <label>@SharedLocalizer["Classroom_Name"]</label>
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-floating mb-5">
                                        <select class="form-select form-select-solid" data-control="select2" id="ruleName" name="ruleName" asp-items="ViewBag.ruleName">
                                            <option value="" disabled selected>@SharedLocalizer["Choose"]</option>
                                        </select>
                                        <label>@SharedLocalizer["Exam_Rule"]</label>
                                    </div>
                                </div>
                                  <div class="col-md-2 mb-2">
                                    <div class="form-floating ">
                                        <input type="text" class="form-control form-control-solid empty" id="StartTimeDisplay" placeholder="" />
                                        <input type="hidden" name="StartTime" id="StartTime" value="@ViewBag.StartTime" />
                                        <label>@SharedLocalizer["Start_Time"]</label>
                                    </div>
                                </div>

                                <div class="col-md-2 mb-2">
                                    <div class="form-floating">
                                        <input type="text" class="form-control form-control-solid empty" id="closedDateDisplay" placeholder="dd.mm.yyyy" />
                                        <input type="hidden" name="endDate" id="closedDate" value="@ViewBag.EndDate" />
                                        <label>@SharedLocalizer["End_Time"]</label>
                                    </div>
                                </div>  
                                <div class="col-md-2 mb-2">
                                    <button type="submit" id="searchButton" class="btn btn-primary hover-elevate-up">@SharedLocalizer["Get"]</button>
                                </div>
                            </div>
                        </div>

            <div id="kt_datatable_example_1_wrapper" class="dataTables_wrapper dt-bootstrap-4 no-footer">
                <div class="table-responsive">
                    @if (ViewBag.ShowAllData == false)
                    {
                    }
                    else
                    {
                        <table id="kt_datatable_example_1" class="table align-text-top table-row-dashed  fs-6 gy-5">

                            <thead>

                                <tr class="text-start text-gray-400 fw-bolder fs-7 text-uppercase gs-0">

                                    <th>@Html.DisplayNameFor(model => model[0].Name)</th>
                                    <th>@Html.DisplayNameFor(model => model[0].ExamType)</th>
                                    <th>@Html.DisplayNameFor(model => model[0].ExamDateTime)</th>
                                    <th>@Html.DisplayNameFor(model => model[0].ExamDuration)</th>
                                    <th>@SharedLocalizer["Exam_State"]</th>
                                    <th>@SharedLocalizer["Transactions"]</th>
                                </tr>
                            </thead>
                            <tbody class="text-gray-600 fw-bold ">

                                @foreach (var exam in Model)
                                {
                                    if (!string.IsNullOrEmpty(exam.Name))
                                    {
                                        <tr>
                                            <td class="categories text-left">
                                                <a>
                                                    <span class="post_category">@exam.Name</span>
                                                </a>
                                            </td>
                                            <td class="categories text-left">
                                                <a>
                                                    <span class="post_category">@exam.ExamType</span>
                                                </a>
                                            </td>

                                            <td class="categories text-left">
                                                <a>
                                                    <span class="post_category">@exam.ExamDateTime</span>
                                                </a>
                                            </td>

                                            <td class="categories text-left">
                                                <a>
                                                    <span class="post_category">@($"{exam.ExamDuration.Hours:D2}:{exam.ExamDuration.Minutes:D2}")</span>                                                    
                                                </a>
                                            </td>

                                            <td class="categories text-left">
                                                <a>
                                                    @if (exam.IsStarted)
                                                    {
                                                        <span class="post-category text-success">@SharedLocalizer["Started"]</span>
                                                    }
                                                    else if (!exam.IsStarted && exam.ExamDateTime < DateTime.Now)
                                                    {
                                                        <span class="post-category text-danger">@SharedLocalizer["Expired"]</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="post-category text-warning">@SharedLocalizer["Not_Started"]</span>
                                                    }
                                                </a>
                                            </td>



                                            <td class="text-center">
                                                <div class="dropdown">
                                                    <button class="btn btn-light btn-active-light-primary btn-sm dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                                        @SharedLocalizer["Options"]
                                                    </button>
                                                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton">
                                                        <li>
                                                            @if (exam.ExamDateTime > DateTime.Now)
                                                            {
                                                                <a class="dropdown-item" onclick="startLoaderAndStartExam('@exam.Id')">@SharedLocalizer["Start_Exam"]</a>
                                                            }
                                                        </li>
                                                        <li>
                                                            @if (exam.ExamDateTime > DateTime.Now)
                                                            {
                                                                <a class="dropdown-item" onclick="loadExamData('@exam.Id')" data-bs-toggle="modal" data-bs-target="#kt_modal_new_target">@ViewLocalizer["Update_Exam"]</a>
                                                            }
                                                        </li>
                                                        <li>
                                                            <a class="dropdown-item" asp-action="Details" asp-route-id="@exam.Id">@SharedLocalizer["Details"]</a>
                                                        </li>
                                                        <li>
                                                            <a class="dropdown-item delete-exam" data-id="@exam.Id">
                                                                @SharedLocalizer["Delete"]
                                                            </a>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </td>

                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    }

                </div>
            </div>
            <!--end::Datatable-->

                        <div style="flex: 1"></div>

                        <!-- Sayfa Bilgisi ve Paginasyon -->

                        <div class="d-flex justify-content-between align-items-center flex-wrap">
                            <div class="col-sm-12 col-md-5 d-flex align-items-center justify-content-center justify-content-md-start">
                                <div class="dataTables_length" id="kt_datatable_example_1_length">
                                    <label>
                                        <select id="pageSize" name="pageSize"asp-for="@Model.PageSize" aria-controls="kt_datatable_example_1" class="form-select form-select-sm form-select-solid">
                                            <option value="10">10</option>
                                            <option value="25">25</option>
                                            <option value="50">50</option>
                                            <option value="100">100</option>
                                        </select>
                                    </label>
                                </div>

                                @*  <div class="dataTables_info" id="kt_table_users_info" role="status" aria-live="polite">Toplam 1 kayıttan 1 ile 1 arasındaki kayıtlar gösteriliyor (toplam 15 kayıt içerisinden filtrelenmiştir)
                                </div> *@
                                <div class="col-5">
                                    <span class="text" style="white-space:nowrap">
                                        @SharedLocalizer["Total"] @Model.TotalItemCount @SharedLocalizer["From"] @(Model.PageNumber * Model.PageSize - (Model.PageSize - 1))
                                        @SharedLocalizer["To"] @(Model.PageNumber * Model.PageSize > Model.TotalItemCount ? Model.TotalItemCount : Model.PageNumber * Model.PageSize)
                                        @SharedLocalizer["Records_Are_Being_Displayed"]
                                    </span>
                                </div>
                            </div>

                            <div class="d-flex justify-content-end mt-3">
                                @* @Html.PagedListPager(Model, page => Url.Action("Index", new { page, productName = ViewBag.ProductName, showAllData = ViewBag.ShowAllData, pageSize = ViewBag.PageSize }), new PagedListRenderOptions *@
                                @* @Html.PagedListPager(Model, page => Url.Action("Index", new { page, typeOfProduct = ViewBag.TypeOfProduct, showAllData = ViewBag.ShowAllData, pageSize = ViewBag.PageSize }), new PagedListRenderOptions *@
                                @Html.PagedListPager(Model, page => Url.Action("GetExamsByStatus", new { page, pageSize = Model.PageSize }), new PagedListRenderOptions
                                {
                                    Display = PagedListDisplayMode.Always,
                                    UlElementClasses = new[] { "pagination", "justify-content-center" },
                                    LiElementClasses = new[] { "page-item" },
                                    PageClasses = new[] { "page-link" },
                                    LinkToFirstPageFormat = @SharedLocalizer["First"],
                                    LinkToLastPageFormat = @SharedLocalizer["Last"],
                                    ContainerDivClasses = new[] { "d-flex", "justify-content-center" }
                                })
                            </div>
                        </div>
                    </form>
                </div>
        </div>
    </div>
</section>

<partial name="~/Areas/Trainer/Views/Exam/Update.cshtml" model="new TrainerExamUpdateVM()"></partial>

@section Scripts
{

    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ui-i18n/1.13.2/i18n/jquery-ui-i18n.min.js"></script>


    <script>
        const culture = '@System.Globalization.CultureInfo.CurrentUICulture.TwoLetterISOLanguageName';

        // Localization tanımı
        (function ($) {
            $.datepicker.regional['tr'] = {
                closeText: 'Kapat',
                prevText: 'Önceki',
                nextText: 'Sonraki',
                currentText: 'Bugün',
                ClearText: "Temizle",
                monthNames: ['Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran',
                    'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık'],
                monthNamesShort: ['Oca', 'Şub', 'Mar', 'Nis', 'May', 'Haz',
                    'Tem', 'Ağu', 'Eyl', 'Eki', 'Kas', 'Ara'],
                dayNames: ['Pazar', 'Pazartesi', 'Salı', 'Çarşamba', 'Perşembe', 'Cuma', 'Cumartesi'],
                dayNamesShort: ['Paz', 'Pzt', 'Sal', 'Çar', 'Per', 'Cum', 'Cmt'],
                dayNamesMin: ['Pz', 'Pt', 'Sa', 'Ça', 'Pe', 'Cu', 'Ct'],
                weekHeader: 'Hf',
                dateFormat: 'dd.mm.yy',
                firstDay: 1,
                isRTL: false,
                showMonthAfterYear: false,
                yearSuffix: ''
            };
        })(jQuery);

        // ISO -> Görsel format
        function formatDate(isoDate, format) {
            if (!isoDate) return '';
            const date = new Date(isoDate);
            if (isNaN(date.getTime())) return isoDate;

            const day = date.getDate().toString().padStart(2, '0');
            const month = (date.getMonth() + 1).toString().padStart(2, '0');
            const year = date.getFullYear();

            return format.replace('dd', day).replace('mm', month).replace('yyyy', year).replace('yy', year.toString().slice(-2));
        }

        // Görsel -> ISO format
        function parseToIso(dateText, format) {
            if (!dateText || !format) return null;

            const separators = /[-./]/;
            const dateParts = dateText.split(separators);
            const formatParts = format.toLowerCase().split(separators);

            let day, month, year;
            for (let i = 0; i < formatParts.length; i++) {
                switch (formatParts[i]) {
                    case 'dd': day = dateParts[i]; break;
                    case 'mm': month = dateParts[i]; break;
                    case 'yy': year = '20' + dateParts[i]; break;
                    case 'yyyy': year = dateParts[i]; break;
                }
            }

            if (!year || !month || !day) return null;

            day = day.padStart(2, '0');
            month = month.padStart(2, '0');

            return `${year}-${month}-${day}`;
        }

        // "Bugün" işlevi override
        $.datepicker._gotoToday = function (id) {
            var target = $(id);
            var inst = this._getInst(target[0]);
            var date = new Date();
            this._setDate(inst, date);
            this._hideDatepicker();

            const region = $.datepicker.regional[culture] || $.datepicker.regional['tr'];
            const formattedDate = $.datepicker.formatDate(region.dateFormat, date);

            target.val(formattedDate).removeClass("empty");

            const hiddenId = target.attr("id").replace("Display", "");
            $("#" + hiddenId).val(
                date.getFullYear() + '-' +
                (date.getMonth() + 1).toString().padStart(2, '0') + '-' +
                date.getDate().toString().padStart(2, '0')
            );
        };
    </script>

    <script>
        $(function () {
            const region = $.datepicker.regional[culture] || $.datepicker.regional['tr'];
            $.datepicker.setDefaults(region);
            const placeholder = culture === 'tr' ? "gg.aa.yyyy" : "mm.dd.yyyy";

            if (!$("#StartTimeDisplay").val() && !$("#StartTime").val()) {
                $("#StartTimeDisplay").addClass("empty").val(placeholder);
            } else if ($("#StartTime").val()) {
                const formatted = formatDate($("#StartTime").val(), region.dateFormat);
                $("#StartTimeDisplay").val(formatted).removeClass("empty");
            }

            $("#StartTimeDisplay").datepicker({
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true,
                showOn: "focus",

                onSelect: function (dateText) {
                    $("#StartTimeDisplay").removeClass("empty");
                    $("#StartTime").val(parseToIso(dateText, region.dateFormat));
                },

                beforeShow: function (input) {
                    setTimeout(function () {
                        var pane = $(input).datepicker("widget").find(".ui-datepicker-buttonpane");

                        // Bugün
                        $('.ui-datepicker-current', pane).off('click').on('click', function (e) {
                            $.datepicker._gotoToday(input);
                            e.preventDefault();
                        });

                        // Temizle
                        if (!pane.find(".ui-datepicker-clear").length) {
                            $('<button>', {
                                text: (culture === 'tr' ? "Temizle" : "Clear"),
                                class: "ui-datepicker-clear ui-state-default ui-priority-primary ui-corner-all",
                                click: function (e) {
                                    e.preventDefault();
                                    $("#StartTimeDisplay").val("").addClass("empty").val(placeholder);
                                    $("#StartTime").val('');
                                }
                            }).appendTo(pane);
                        }
                    }, 1);
                }
            });

            $("#StartTimeDisplay").on('focus', function () {
                if ($(this).hasClass('empty')) $(this).val('').removeClass('empty');
            }).on('blur', function () {
                if (!$(this).val()) $(this).addClass('empty').val(placeholder);
            });
        });
    </script>


    <script>
        $(function () {
            const region = $.datepicker.regional[culture] || $.datepicker.regional['tr'];
            const placeholder = culture === 'tr' ? "gg.aa.yyyy" : "mm.dd.yyyy";

            if (!$("#closedDateDisplay").val() && !$("#closedDate").val()) {
                $("#closedDateDisplay").addClass("empty").val(placeholder);
            } else if ($("#closedDate").val()) {
                const formatted = formatDate($("#closedDate").val(), region.dateFormat);
                $("#closedDateDisplay").val(formatted).removeClass("empty");
            }

            $("#closedDateDisplay").datepicker({
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true,
                showOn: "focus",

                onSelect: function (dateText) {
                    $("#closedDateDisplay").removeClass("empty");
                    $("#closedDate").val(parseToIso(dateText, region.dateFormat));
                },

                beforeShow: function (input) {
                    setTimeout(function () {
                        var pane = $(input).datepicker("widget").find(".ui-datepicker-buttonpane");

                        pane.empty();

                        // Bugün
                        $('<button>', {
                            text: region.currentText,
                            class: "ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all",
                            click: function (e) {
                                e.preventDefault();
                                $.datepicker._gotoToday(input);
                            }
                        }).appendTo(pane);

                        // Temizle
                        $('<button>', {
                            text: (culture === 'tr' ? "Temizle" : "Clear"),
                            class: "ui-datepicker-clear ui-state-default ui-priority-primary ui-corner-all",
                            click: function (e) {
                                e.preventDefault();
                                $("#closedDateDisplay").val("").addClass("empty").val(placeholder);
                                $("#closedDate").val('');
                            }
                        }).appendTo(pane);
                    }, 10);
                }
            });

            $("#closedDateDisplay").on('focus', function () {
                if ($(this).hasClass('empty')) $(this).val('').removeClass('empty');
            }).on('blur', function () {
                if (!$(this).val()) $(this).addClass('empty').val(placeholder);
            });
        });
    </script>


    <style>
        .ui-datepicker-clear {
            margin-left: 10px;
        }
    </style> 

     
    <script src="~/newlayouts/src/js/custom/utilities/modals/update-exam.js"></script>
    <script src="~/newlayouts/src/js/custom/apps/user-management/users/list/start-exam.js"></script>
       <script>
        $(document).ready(function () {
            $(".delete-exam").click(function () {
                var id = $(this).data("id");

                Swal.fire({
                    title: '@SharedLocalizer["Confirm_Delete_Title"]',
                    text: '@SharedLocalizer["Confirm_Delete_Text"]',
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#d33",
                    cancelButtonColor: "#3085d6",
                    confirmButtonText: '@SharedLocalizer["Confirm_Button_Text"]',
                    cancelButtonText: '@SharedLocalizer["Cancel_Button_Text"]'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: "/Trainer/Exam/Delete",
                            type: "POST",
                            data: { id: id },
                            success: function (response) {
                                if (response.isSuccess) {                      
                                    Swal.close();                                
                                    $("#kt_datatable_example_1 tbody tr").each(function () {
                                        if ($(this).find(".delete-exam").data("id") == id) {
                                            $(this).fadeOut(500, function () {
                                                $(this).remove();
                                            });
                                        }
                                    });
                                }
                            }
                        });
                    }
                });
            });
        });



    </script>


    <script>
        $(document).ready(function () {
            // Sayfa kaydırıldığında çalışacak scroll olayını dinle
            $(window).on('scroll', function () {
                // Bootstrap'in dropdown metodu ile açık olan tüm dropdown menülerini kapat
                $('.dropdown-menu.show').removeClass('show');
                $('.dropdown-toggle[aria-expanded="true"]').attr('aria-expanded', 'false');
                console.log("Scroll hareketi çalıştı.")
            });

        });
    </script>



    <script>
        $(document).ready(function () {
            // Options dropdown içindeki Start Exam linkine tıklandığında
            $('body').on('click', '.start-exam-link', function (e) {
                e.preventDefault(); // Sayfa yönlendirmesini engelle

                var examId = $(this).data('exam-id');
                showStartExamConfirmationPopup(examId);
            });

            // Diğer kodlar...
        });

        function showStartExamConfirmationPopup(examId) {
            Swal.fire({
                text: "Sınavı başlatmak istediğinize emin misiniz?",
                icon: "warning",
                showCancelButton: true,
                buttonsStyling: false,
                confirmButtonText: "Evet, başlat!",
                cancelButtonText: "Hayır, vazgeç",
                customClass: {
                    confirmButton: "btn btn-primary",
                    cancelButton: "btn btn-active-light"
                }
            }).then(function (result) {
                if (result.value) {
                    // Sınav başlatma işlemleri burada yapılabilir
                    // AJAX çağrısıyla başlatma action'u çalıştırılacak
                    startExam(examId);
                }
            });
        }



        function startLoaderAndStartExam(id) {

            stopLoader();

            var loader = StartExamLoader()

            $.ajax({
                url: '/Trainer/Exam/StartExam',
                type: 'GET',
                data: { Id: id },
                success: function (response) {
                    if (response.success) {
                        location.reload();
                    }
                },
                complete: function () {
                    for (let i = 0; i < loader.length; i++) {
                        loader[i].style.display = 'none';
                    }
                    loader.textContent = '';
                }
            });
        }
    </script>



    <script>
        var localizer = {
            emptyTable: '@SharedLocalizer["Empty_Data"]',
            infoEmpty: '@SharedLocalizer["Info_Empty"]',
            infoFiltered: '@SharedLocalizer["Info_Filtered"]',
            zeroRecords: '@SharedLocalizer["Zero_Records"]'
        };
        $(document).ready(function () {
            var dt = $("#kt_datatable_example_1").DataTable({
                ordering: false,
                pageLength: 25, // Set default page length to 25
                lengthMenu: [10, 25, 50, 100], // Include 25 in length menu options
                dom:
                    '<"row"<"col-sm-12"t>>' +
                    '<"row"<"col-sm-12 col-md-1"l><"col-sm-12 col-md-5"i><"col-sm-12 col-md-6"p>>',
                language: {
                    emptyTable: localizer.emptyTable,
                    infoEmpty: localizer.infoEmpty,
                    infoFiltered: localizer.infoFiltered,
                    zeroRecords: localizer.zeroRecords,
                },
            });

            $('body').on('change', 'select[name="kt_datatable_example_1_length"]', function () {
                dt.page.len($(this).val()).draw();
                $(this).css({
                    'border': '0 solid transparent',
                    'transition': 'color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out'

                });

            });

            // dt.on('draw.dt', function () {
            //     updateInfoText(dt.page.info());
            // });

            // function updateInfoText(pageInfo) {
            //     var infoText = pageInfo.recordsTotal + " kayıttan " + (pageInfo.start + 1) + " ile " + pageInfo.end + " arasındaki kayıtlar gösteriliyor";
            //     $('#kt_datatable_example_1_info').html(infoText).css({
            //         'margin-top': '6px',
            //         'font-size': '14px',
            //         'font-family': 'Poppins, Helvetica, sans- serif',
            //     });
            // }

            // updateInfoText(dt.page.info());

            function updatePaginationArrows() {
                var prevButton = $('#kt_datatable_example_1_previous a');
                prevButton.html('<i class="fa fa-chevron-left"></i>');

                var nextButton = $('#kt_datatable_example_1_next a');
                nextButton.html('<i class="fa fa-chevron-right"></i>');

                var pageButtons = $('#kt_datatable_example_1_paginate .page-item');

                var activePage = $('#kt_datatable_example_1_paginate .page-item.active a');
                activePage.css({
                    'color': '#ffffff'
                });
            }

            updatePaginationArrows();

            dt.on('draw.dt', function () {
                updatePaginationArrows();
            });

        });
        $(document).ready(function () {
            $('[data-bs-toggle="tooltip"]').tooltip({
                title: function () {
                    return $(this).attr('data-bs-original-title');
                }
            });
        });
        function onSubmitForm() {
            var searchButton = document.getElementById("searchButton");

            var nameSelect = document.getElementById("name");
            var branchSelect = document.getElementById("branchName");
            var groupTypeSelect = document.getElementById("groupType");
            var openingDateInput = document.getElementById("openingDate");
            var closedDateInput = document.getElementById("closedDate");
            if (!nameSelect.value && !branchSelect.value && !groupTypeSelect.value && !openingDateInput.value && !closedDateInput.value) {
                window.location.href = "@Url.Action("Index", new { showAllData = true })";
                return false;
            } else {
                return true;
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            var divElements = document.querySelectorAll('div');

            divElements.forEach(function (divElement) {
                var selectElement = divElement.querySelector('select');

            });

            function sortSelectOptionsAlphabetically(selectElement) {

                var options = Array.from(selectElement.options);

                options.sort(function (a, b) {
                    return a.text.localeCompare(b.text);
                });

                options.forEach(function (option) {
                    selectElement.add(option);
                });
            }
        });
    </script>

} 

