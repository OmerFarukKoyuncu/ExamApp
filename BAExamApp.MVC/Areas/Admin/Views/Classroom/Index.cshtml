@using BAExamApp.MVC
@using Microsoft.Extensions.Localization
@using X.PagedList.Mvc.Core
@using X.PagedList.Mvc.Common
@using X.PagedList.Mvc.Core.Common
@using X.PagedList
@inject IStringLocalizer<SharedModelResource> localizer
@model IPagedList<AdminClassroomListVM>

@{
	ViewData["Title"] = SharedLocalizer["Classroom"];
}

<head>
	<link href="~/css/classroom-filter.css" rel="stylesheet"/>
	<link href="~/css/checkboxes.css" rel="stylesheet" />
	<link href="~/newlayouts/dist/assets/plugins/global/plugins.bundle.css" rel="stylesheet" type="text/css"/>
	<link href="~/newlayouts/dist/assets/css/style.bundle.css" rel="stylesheet"/>
	<link rel="stylesheet"
	      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200"/>
</head>
<style>
	.tooltip-inner {
		max-width: 350px !important;
	}
</style>

<style>
	#kt_datatable_example_1_wrapper .dataTables_scrollBody table tbody tr {
		display: block !important;
		margin-top: 0px !important; /* İhtiyaca göre ayarlayabilirsiniz */
	}

	#kt_datatable_example_1_wrapper .dataTables_scrollBody table tbody {
		display: flex !important;
		flex-direction: column !important;
		align-items: flex-start !important;
	}
</style>
<style>
	/* /* Genel görünüm */
	.ui-datepicker {
		font-family: 'Segoe UI', sans-serif;
		font-size: 14px;
		background: #fff;
		border: none;
		padding: 12px 16px;
		border-radius: 8px;
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
		z-index: 9999 !important;
	}

	/* Başlık kısmı (ay ve yıl) */
	.ui-datepicker-header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-bottom: 10px;
	}

	/* Ay ve yıl select’leri */
	.ui-datepicker select.ui-datepicker-month,
	.ui-datepicker select.ui-datepicker-year {
		font-size: 14px;
		padding: 4px 6px;
		border-radius: 4px;
		border: 1px solid #ddd;
		background-color: #f9f9f9;
		color: #333;		
	}

	/* Önceki ve sonraki ay butonları */
	.ui-datepicker-prev, .ui-datepicker-next {
		cursor: pointer;
		background: none;
		border: none;
		color: #666;
		font-weight: bold;
		font-size: 16px;
		width: 28px;
		height: 28px;
		display: flex;
		align-items: center;
		justify-content: center;
		transition: background 0.2s;
		border-radius: 50%;
	}

		.ui-datepicker-prev:hover, .ui-datepicker-next:hover {
			background-color: #f1f1f1;
		}

	/* Gün isimleri */
	.ui-datepicker th {
		font-weight: 500;
		color: #4b4b4b;
		padding: 5px 0;
	}

	/* Gün kutuları */
	.ui-datepicker td {
		padding: 0;
	}

		.ui-datepicker td a {
			width: 36px;
			height: 36px;
			line-height: 36px;
			display: inline-block;
			text-align: center;
			text-decoration: none;
			color: #333;
			border-radius: 6px;
			transition: background 0.2s;
			margin: 2px;
		}

			/* Hover ve bugün */
			.ui-datepicker td a:hover {
				background: #f1f5f9;
			}

	.ui-datepicker-today a {
		background-color: #e3f2fd !important;
		font-weight: bold;
		color: #007bff;
	}

	/* Seçili gün */
	.ui-datepicker .ui-state-active {
		background: #009EF7 !important;
		color: white !important;
	}

	/* Hücre kenar çizgilerini kaldır */
	.ui-datepicker table {
		border-collapse: separate;
		border-spacing: 0;
	}

	.ui-datepicker-close {
		display: none !important;
	}

	.ui-datepicker-buttonpane {
		display: flex;
		justify-content: space-between;
		padding: 0.3em;
	}

	.ui-datepicker-clear {
		order: -1; /* sola */
	}

	.ui-datepicker-buttonpane button {
		background: none !important;
		border: none !important;
		color: #007bff !important;
		box-shadow: none !important;
		font-weight: normal !important; /* İnce yazı */
		cursor: pointer;
		padding: 4px 8px;
	}

		.ui-datepicker-buttonpane button:hover {
			text-decoration: underline;
		}

</style>

<section class="section dashboard">
	<div class="card card-docs flex-row-fluid mb-2" id="kt_docs_content_card">
		<div class="card-body fs-6 py-15 px-10 py-lg-15 px-lg-15 text-gray-700">
			<div class="d-flex justify-content-between">
				<h5 style="display: flex; align-items: center;">
					@SharedLocalizer["Classroom_List"]

					<span class="material-symbols-outlined" style="margin-left: 5px; font-size: 130%; "
					      data-bs-toggle="tooltip" data-bs-placement="right"
					      title="@SharedLocalizer["Classroom_Filter_Warning"]">
						info
					</span>
				</h5>

				<div class="d-flex justify-content-end">

					<button type="button" class="btn btn-primary mb-4" data-bs-toggle="modal"
					        data-bs-target="#kt_modal_add_class">
						<span class="svg-icon svg-icon-2">

							<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
							     fill="none">

								<rect opacity="0.5" x="11.364" y="20.364" width="16" height="2" rx="1"
								      transform="rotate(-90 11.364 20.364)" fill="currentColor"/>

								<rect x="4.36396" y="11.364" width="16" height="2" rx="1" fill="currentColor"/>

							</svg>

						</span>

						@SharedLocalizer["Create", SharedLocalizer["Classroom"]]

					</button>
				</div>
			</div>
			<div class="d-flex flex-stack flex-wrap mb-5">

				<div class="d-flex justify-content-end" data-kt-docs-table-toolbar="base">

					<form class="formClassroom" asp-area="Admin" asp-controller="Classroom" asp-action="GetFilteredList"
					      method="get">
						<input type="hidden" id="showAllDataHidden" name="showAllData"
						       value="@ViewBag.ShowAllData.ToString().ToLower()"/>
						<div class="classroomfilter d-flex flex-row">
							<div class="row">
								<div class="col-md-4">
									<div class="form-floating mb-2">
										<select class="form-select form-select-solid" data-control="select2" id="name"
										        name="name" asp-items="@(ViewBag.ClassList)">
											<option value=""> @SharedLocalizer["Choose"]</option>
										</select>
										<label>@SharedLocalizer["Classroom_Name"]</label>
									</div>
								</div>

								<div class="col-md-4">
									<div class="form-floating mb-5">
										<select class="form-select form-select-solid" data-control="select2"
										        id="branchName" name="branchName" asp-items="@(ViewBag.BranchList)">
											<option value="">@SharedLocalizer["Choose"]</option>
										</select>
										<label>@SharedLocalizer["Branch_Name"]</label>
									</div>
								</div>

								<div class="col-md-4">
									<div class="form-floating mb-5">
										<select class="form-select form-select-solid" data-control="select2"
										        id="groupType" name="groupType" asp-items="@(ViewBag.GroupTypeList)">
											<option value="">@SharedLocalizer["Choose"]</option>
										</select>
										<label>@SharedLocalizer["Group_Type"]</label>
									</div>
								</div>
								<div class="col-md-4">
									<div class="form-floating mb-5">
										<input type="text" class="form-control form-control-solid"
										       id="openingDateDisplay" placeholder="@SharedLocalizer["Opening_Date"]"/>
										<input type="hidden" name="openingDate" id="openingDate"
										       value="@ViewBag.OpeningDate"/>
										<label>@SharedLocalizer["Opening_Date"]</label>
									</div>
								</div>
								<div class="col-md-4">
									<div class="form-floating mb-5">
										<input type="text" class="form-control form-control-solid"
										       id="closedDateDisplay" placeholder="@SharedLocalizer["Closed_Date"]"/>
										<input type="hidden" name="closedDate" id="closedDate"
										       value="@ViewBag.ClosedDate"/>
										<label>@SharedLocalizer["Closed_Date"]</label>
									</div>
								</div>
								<div class="col-md-4 d-flex justify-content-end">
									<button type="button" id="clearButton"
									        class="btn btn-secondary hover-elevate-up">@SharedLocalizer["Clear"]</button>
								</div>
								<div class="col-md-4 d-flex justify-content-end">
									<button type="submit" id="searchButton"
									        class="btn btn-primary hover-elevate-up">@SharedLocalizer["Show"]</button>
								</div>

							</div>
						</div>
					</form>
				</div>
				<div class="d-flex justify-content-end align-items-center d-none" data-kt-docs-table-toolbar="selected">

					<div class="fw-bolder me-5">

						<span class="me-2" data-kt-docs-table-select="selected_count"></span>Selected

					</div>

					<button type="button" class="btn btn-danger" data-kt-docs-table-select="delete_selected">Selection
						Action
					</button>

				</div>
			</div>

			<div>
			</div>
			<div id="kt_datatable_example_1_wrapper" class="dataTables_wrapper dt-bootstrap-4 no-footer">
				<div class="table-responsive">

					<div class="card-body py-4">

						<!--begin: : ShowAllData-->
						<div>
							@if (ViewBag.ShowAllData == true)
							{
								<div class="form-check mt-3">
									<input class="custom-checkbox" type="checkbox" id="showInactiveCheckbox"
										   onchange="toggleData(this.checked)"
									@(ViewBag.ShowAllData != null && (bool)ViewBag.ShowAllData ? "checked" : "")>
									<label class="custom-checkbox-label" for="showInactiveCheckbox">
										@SharedLocalizer["Show_All_Classroom"]
									</label>
								</div>
							}
							else
							{
								<div class="form-check mt-3">
									<input class="custom-checkbox" type="checkbox" id="showInactiveCheckbox"
										   onchange="toggleData(this.checked)"
									@(ViewBag.ShowAllData != null && (bool)ViewBag.ShowAllData ? "checked" : "")>
									<label class="custom-checkbox-label" for="showInactiveCheckbox">
										@SharedLocalizer["Show_All_Classroom"]
									</label>

								</div>
							}
						</div>
						<!--end: : ShowAllData-->

						@if (ViewBag.ShowAllData == false)
						{
							{
								<table id="kt_datatable_example_1" class="table table-row-dashed fs-6 gy-5">

									<thead>

									<tr class="text-start text-gray-400 fw-bolder fs-7 text-uppercase gs-0">

										<th>@Html.DisplayNameFor(x => x.GetEnumerator().Current.Name)</th>

										<th>@Html.DisplayNameFor(x => x.GetEnumerator().Current.OpeningDate)</th>

										<th>@Html.DisplayNameFor(x => x.GetEnumerator().Current.ClosedDate)</th>

										<th>@Html.DisplayNameFor(x => x.GetEnumerator().Current.BranchName)</th>

										<th>@Html.DisplayNameFor(x => x.GetEnumerator().Current.ClassroomExamCount) / @Html.DisplayNameFor(x => x.GetEnumerator().Current.ClassroomAppointedExamCount)</th>
										<th>@Html.DisplayNameFor(x => x.GetEnumerator().Current.Status)</th>

										<th>@SharedLocalizer["Classroom_Operations"]</th>

									</tr>
									</thead>
									<tbody class="text-gray-600 fw-bold ">

									@foreach (var item in Model)

									{
										if (!string.IsNullOrEmpty(item.Name))

										{
											<tr>

												<td class="categories text-start">

													<a title="Eğitmenler: @item.TrainerNames">

														<span class="post_category">@item.Name</span>

													</a>

												</td>

												<td class="categories text-start">

													<a>

														<span
															class="post_category">@item.OpeningDate.ToShortDateString()</span>

													</a>

												</td>

												<td class="categories text-start">

													<a>

														<span
															class="post_category">@item.ClosedDate.ToShortDateString()</span>

													</a>

												</td>

												<td class="categories text-start">

													<a>

														<span class="post_category">@item.BranchName</span>

													</a>

												</td>
												<td class="categories text-start">

													<a>

														<span
															class="post_category">@item.ClassroomAppointedExamCount / @item.ClassroomExamCount</span>

													</a>

												</td>
												<td class="categories text-start">

													<a>

															<span
																class="badge @(item.Status == Status.Active ? "badge-light-success" : "badge-light-warning")">
																@if (item.Status == Status.Active)
																{
																	<text>@SharedLocalizer["Active"]</text>
																}
																else
																{
																	<text>@SharedLocalizer["Passive"]</text>
																}
															</span>

													</a>

												<td class="text-start">

													<div class="dropdown">

														<button
															class="btn btn-light btn-active-light-primary btn-sm dropdown-toggle"
															type="button" id="dropdownMenuButton"
															data-bs-toggle="dropdown" aria-extended="false">
															@SharedLocalizer["Options"]
														</button>

														<ul class="dropdown-menu dropdown-menu-end menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-bold fs-7 w-125px py-4"
														    aria-labelledby="dropdownMenuButton">
															<li class="menu-item px-3">
																@if (item.Status == Status.Active)
																{
																	<a class="menu-link px-3"
																	   data-kt-docs-table-filter="edit_row"
																	   asp-action="Details" asp-route-id="@item.Id"
																	   asp-route-page="@Model.PageNumber"
																	   asp-route-pageSize="@Model.PageSize"
																	   asp-route-name="@ViewBag.Name"
																	   asp-route-branchName="@ViewBag.BranchName"
																	   asp-route-groupType="@ViewBag.GroupType"
																	   asp-route-openingDate="@ViewBag.OpeningDate"
																	   asp-route-closedDate="@ViewBag.ClosedDate"
																	   asp-route-showAllData="@ViewBag.ShowAllData">@SharedLocalizer["Detail"]</a>


																	<a id="kt-update-classroom"
																	   onclick="loadClassroomData('@item.Id')"
																	   data-classroom-id="@item.Id"
																	   data-bs-toggle="modal"
																	   data-bs-target="#kt_modal_update_classroom"
																	   class="menu-link px-3"
																	   data-kt-users-table-filter="edit_row">@SharedLocalizer["Edit"]</a>

																	<a class="menu-link px-3"
																	   data-kt-docs-table-filter="edit_row"
																	   asp-action="AddStudent"
																	   asp-route-id="@item.Id">@SharedLocalizer["Add_Student"]</a>

																	<a class="menu-link px-3"
																	   data-kt-docs-table-filter="edit_row"
																	   asp-action="AddTrainer"
																	   asp-route-id="@item.Id">@SharedLocalizer["Add_Trainer"]</a>
																}
																else
																{
																	<a class="menu-link px-3"
																	   data-kt-docs-table-filter="edit_row"
																	   asp-action="Details" asp-route-id="@item.Id"
																	   asp-route-page="@Model.PageNumber"
																	   asp-route-pageSize="@Model.PageSize"
																	   asp-route-name="@ViewBag.Name"
																	   asp-route-branchName="@ViewBag.BranchName"
																	   asp-route-groupType="@ViewBag.GroupType"
																	   asp-route-openingDate="@ViewBag.OpeningDate"
																	   asp-route-closedDate="@ViewBag.ClosedDate"
																	   asp-route-showAllData="@ViewBag.ShowAllData">@SharedLocalizer["Detail"]</a>
																}
															</li>
														</ul>
													</div>
												</td>
											</tr>
										}
									}
									</tbody>
								</table>
							}
						}
						else
						{
							@if (Model != null && Model.Any())
							{
								<table id="kt_datatable_example_1" class="table table-row-dashed fs-6 gy-5">
									<thead>
									<tr class="text-start text-gray-400 fw-bolder fs-7 text-uppercase gs-0">
										<th>@Html.DisplayNameFor(x => x.GetEnumerator().Current.Name)</th>
										<th>@Html.DisplayNameFor(x => x.GetEnumerator().Current.OpeningDate)</th>
										<th>@Html.DisplayNameFor(x => x.GetEnumerator().Current.ClosedDate)</th>
										<th>@Html.DisplayNameFor(x => x.GetEnumerator().Current.BranchName)</th>
										<th>@Html.DisplayNameFor(x => x.GetEnumerator().Current.ClassroomExamCount) / @Html.DisplayNameFor(x => x.GetEnumerator().Current.ClassroomAppointedExamCount)</th>
										<th>@Html.DisplayNameFor(x => x.GetEnumerator().Current.Status)</th>
										<th>@SharedLocalizer["Classroom_Operations"]</th>
									</tr>
									</thead>
									<tbody class="text-gray-600 fw-bold">
									@foreach (var item in Model)
									{
										if (!string.IsNullOrEmpty(item.Name))
										{
											<tr>
												<td class="categories text-start">
													<a title="Eğitmenler: @item.TrainerNames">
														<span class="post_category">@item.Name</span>
													</a>
												</td>
												<td class="categories text-start">
													<a>
														<span
															class="post_category">@item.OpeningDate.ToShortDateString()</span>
													</a>
												</td>
												<td class="categories text-start">
													<a>
														<span
															class="post_category">@item.ClosedDate.ToShortDateString()</span>
													</a>
												</td>
												<td class="categories text-start">
													<a>
														<span class="post_category">@item.BranchName</span>
													</a>
												</td>
												<td>
													<a>
														<span
															class="post_category">@item.ClassroomAppointedExamCount / @item.ClassroomExamCount</span>
													</a>
												</td>
												<td class="categories text-start">
													<a>
                                                            <span
	                                                            class="badge @(item.Status == Status.Active ? "badge-light-success" : "badge-light-warning")">
                                                                @if (item.Status == Status.Active)
	                                                            {
		                                                            <text>@SharedLocalizer["Active"]</text>
	                                                            }
	                                                            else
	                                                            {
		                                                            <text>@SharedLocalizer["Passive"]</text>
	                                                            }
                                                            </span>
													</a>
												</td>
												<td class="text-start">
													<div class="dropdown">
														<button
															class="btn btn-light btn-active-light-primary btn-sm dropdown-toggle"
															type="button" id="dropdownMenuButton"
															data-bs-toggle="dropdown" aria-extended="false">
															@SharedLocalizer["Options"]
														</button>
														<ul class="dropdown-menu dropdown-menu-end menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-bold fs-7 w-125px py-4"
														    aria-labelledby="dropdownMenuButton">
															<li class="menu-item px-3">
																@if (item.Status == Status.Active)
																{
																	<a class="menu-link px-3"
																	   data-kt-docs-table-filter="edit_row"
																	   asp-action="Details" asp-route-id="@item.Id"
																	   asp-route-page="@Model.PageNumber"
																	   asp-route-pageSize="@Model.PageSize"
																	   asp-route-name="@ViewBag.Name"
																	   asp-route-branchName="@ViewBag.BranchName"
																	   asp-route-groupType="@ViewBag.GroupType"
																	   asp-route-openingDate="@ViewBag.OpeningDate"
																	   asp-route-closedDate="@ViewBag.ClosedDate"
																	   asp-route-showAllData="@ViewBag.ShowAllData">@SharedLocalizer["Detail"]</a>
																	<a id="kt-update-classroom"
																	   onclick="loadClassroomData('@item.Id')"
																	   data-classroom-id="@item.Id"
																	   data-bs-toggle="modal"
																	   data-bs-target="#kt_modal_update_classroom"
																	   class="menu-link px-3"
																	   data-kt-users-table-filter="edit_row">@SharedLocalizer["Edit"]</a>
																	<a class="menu-link px-3"
																	   data-kt-docs-table-filter="edit_row"
																	   asp-action="AddStudent"
																	   asp-route-id="@item.Id">@ViewLocalizer["Add_Student"]</a>
																	<a class="menu-link px-3"
																	   data-kt-docs-table-filter="edit_row"
																	   asp-action="AddTrainer"
																	   asp-route-id="@item.Id">@ViewLocalizer["Add_Trainer"]</a>
																}
																else
																{
																	<a class="menu-link px-3"
																	   data-kt-docs-table-filter="edit_row"
																	   asp-action="Details" asp-route-id="@item.Id"
																	   asp-route-page="@Model.PageNumber"
																	   asp-route-pageSize="@Model.PageSize"
																	   asp-route-name="@ViewBag.Name"
																	   asp-route-branchName="@ViewBag.BranchName"
																	   asp-route-groupType="@ViewBag.GroupType"
																	   asp-route-openingDate="@ViewBag.OpeningDate"
																	   asp-route-closedDate="@ViewBag.ClosedDate"
																	   asp-route-showAllData="@ViewBag.ShowAllData">@SharedLocalizer["Detail"]</a>
																}
															</li>
														</ul>
													</div>
												</td>
											</tr>
										}
									}
									</tbody>
								</table>
							}
							else
							{
								<table class="table table-row-dashed fs-6 gy-5" style="width: 100%;">
									<tbody>
									<tr>
										<td colspan="7"
										    style="text-align: center !important; vertical-align: middle !important;  display: flex; justify-content: center; align-items: center; color: #6c757d !important;">
											@SharedLocalizer["No_Results_Found"]
										</td>
									</tr>
									</tbody>
								</table>
							}
						}

						@if (Model.Count != 0)
						{
							<div class="d-flex justify-content-between align-items-center flex-wrap">
								<div
									class="col-sm-12 col-md-5 d-flex align-items-center justify-content-center justify-content-md-start">
									<div class="dataTables_length" id="kt_datatable_example_1_length">
										<label>
											<select id="pageSizeDropdown" name="kt_datatable_example_1_length"
											        aria-controls="kt_datatable_example_1"
											        class="form-select form-select-sm form-select-solid">
												<option value="10">10</option>
												<option value="25">25</option>
												<option value="50">50</option>

											</select>
										</label>
									</div>
									<div class="col-5" style="margin-left:10px">
											<span class="text" style="white-space:nowrap">
												@SharedLocalizer["Total"] @Model.TotalItemCount @SharedLocalizer["From"] @(Model.PageNumber * Model.PageSize - (Model.PageSize - 1))
												@SharedLocalizer["To"] @(Model.PageNumber * Model.PageSize > Model.TotalItemCount ? Model.TotalItemCount : Model.PageNumber * Model.PageSize)
												@SharedLocalizer["Records_Are_Being_Displayed"]
											</span>
									</div>
								</div>

								<div class="d-flex justify-content-end mt-3">
									@Html.PagedListPager(Model, page => Url.Action("GetFilteredList", new
									{
										page,
										pageSize = ViewBag.PageSize,
										branchName = ViewBag.BranchName,
										openingDate = ViewBag.OpeningDate,
										closedDate = ViewBag.ClosedDate,
										showAllData = ViewBag.ShowAllData
									}), new PagedListRenderOptions
									{
										Display = PagedListDisplayMode.Always,
										UlElementClasses = new[] { "pagination", "justify-content-center" },
										LiElementClasses = new[] { "page-item" },
										PageClasses = new[] { "page-link" },
										LinkToFirstPageFormat = @localizer["First"],
										LinkToLastPageFormat = @localizer["Last"],
										ContainerDivClasses = new[] { "d-flex", "justify-content-center" }
									})
								</div>
							</div>
						}
					</div>
				</div>
			</div>
		</div>
	</div>

</section>

<partial name="~/Areas/Admin/Views/Classroom/CreatePartialView.cshtml" model="new AdminClassroomCreateVM()"></partial>
<partial name="~/Areas/Admin/Views/Classroom/Update.cshtml" model="new AdminClassroomUpdateVM()"></partial>

@section Scripts
{
	<script src="~/newlayouts/src/js/custom/apps/user-management/users/list/createclass.js"></script>
	<script src="~/newlayouts/src/js/custom/apps/user-management/users/view/update-class.js"></script>
	// For Custom Checkboxes
	<script src="~/js/checkboxes.js" ></script>
	<script>
		var localizedTexts = {
			unsavedChangesTitle: '@SharedLocalizer["Unsaved_Changes_Title"]',
			unsavedChangesText: '@SharedLocalizer["Unsaved_Changes_Text"]',
			confirmButtonText: '@SharedLocalizer["Yes_Leave"]',
			cancelButtonText: '@SharedLocalizer["No_Stay"]',
			formSubmittedText: '@SharedLocalizer["Form_Submitted_Text"]',
			okButtonText: '@SharedLocalizer["Ok_Button_Text"]'
		};
		var localizer = {
			emptyTable: '@SharedLocalizer["Empty_Data"]',
			info: '@SharedLocalizer["Info"]',
			infoEmpty: '@SharedLocalizer["Info_Empty"]',
			infoFiltered: '@SharedLocalizer["Info_Filtered"]',
			zeroRecords: '@SharedLocalizer["Zero_Records"]'
		};

		// Scroll hareket ettirildiğinde option menüsünü kapatır.
		$(document).ready(function () {
			$(window).on('scroll', function () {
				$('.dropdown-menu.show').removeClass('show');
				$('.dropdown-toggle[aria-expanded="true"]').attr('aria-expanded', 'false');
				console.log("Scroll hareketi çalıştı.")
			});

		});


		//jquery for datatables
		$(document).ready(function () {
			var table = $('#kt_datatable_example_1').DataTable({
				language: {
					emptyTable: localizer.emptyTable,
					info: localizer.info,
					infoEmpty: localizer.infoEmpty,
					infoFiltered: localizer.infoFiltered,
					zeroRecords: localizer.zeroRecords
				},
				/*  searching: true, */   // sadece search kısmı calıssın
				paging: false,
				ordering: false,
				info: false,
				order: [[0, 'asc']],
				pageLength: 10, // Set default page length to 25
				lengthMenu: [10, 25, 50,], // Include 25 in length menu options
				aoColumnDefs: [
					{
						targets: 0,
						orderable: false
					},
					{
						targets: 5,
						orderable: false
					}
				]
			});
		});

		$(document).ready(function () {

			var currentPageSize = '@ViewBag.PageSize' || '10';
			var showAllData = '@ViewBag.ShowAllData' === 'True';
			var currentPage = '@ViewBag.PageNumber';

			$('#pageSizeDropdown').val(currentPageSize);
			$('#showInactiveCheckbox').prop('checked', showAllData);


			$('#pageSizeDropdown').change(function () {
				updateUrl(currentPage);
			});

			$('#showInactiveCheckbox').change(function () {
				$('#showAllDataHidden').val($(this).is(':checked') ? "true" : "false");
				updateUrl(currentPage); // URL'yi güncelle
			});

			$('.page-link').click(function () {
				var newPage = $(this).data('page');
				currentPage = newPage;
				updateUrl(currentPage);
			});

			function updateUrl(currentPage) {
				var selectedPageSize = $('#pageSizeDropdown').val();
				var isChecked = $('#showInactiveCheckbox').is(':checked');
				var name = $('#name').val();
				var branchName = $('#branchName').val();
				var groupType = $('#groupType').val();
				var openingDate = $('#openingDate').val();
				var closedDate = $('#closedDate').val();


				var url = '@Url.Action("GetFilteredList", "Classroom")' + `?page=${currentPage}&pageSize=${selectedPageSize}&showAllData=${isChecked}&name=${name}&branchName=${branchName}&groupType=${groupType}&openingDate=${openingDate}&closedDate=${closedDate}`;
				window.location.href = url;
			}
		});

		function toggleData(isChecked) {
			var name = $('#name').val();
			var branchName = $('#branchName').val();
			var groupType = $('#groupType').val();
			var openingDate = $('#openingDate').val();
			var closedDate = $('#closedDate').val();
			openingDate = openingDate === "" ? null : openingDate;
			closedDate = closedDate === "" ? null : closedDate;

			var url = '@Url.Action("GetFilteredList", "Classroom")' + `?page=1showAllData=     ${isChecked}&name=${name}&branchName=${branchName}groupType=${groupType}    &openingDate= ${openingDate}&closedDate${closedDate}`;
			window.location.href = url;
		}

		$(document).ready(function () {
			$('[data-bs-toggle="tooltip"]').tooltip({
				title: function () {
					return $(this).attr('data-bs-original-title');
				}
			});
		});


		document.addEventListener("DOMContentLoaded", function () {
			var divElements = document.querySelectorAll('div');
			divElements.forEach(function (divElement) {
				var selectElement = divElement.querySelector('select');
				if (selectElement) {
					sortSelectOptionsAlphabetically(selectElement);
				}
			});

			function sortSelectOptionsAlphabetically(selectElement) {
				var options = Array.from(selectElement.options);
				options.sort(function (a, b) {
					return a.text.localeCompare(b.text);
				});
				options.forEach(function (option) {
					selectElement.add(option);
				});
			}
		});

		//JavaScript command that resets all entered inputs.
		document.getElementById("clearButton").addEventListener("click", function () {
			var form = document.querySelector(".formClassroom");

			form.querySelectorAll("select").forEach(function (select) {
				select.value = "";
				$(select).trigger("change");
			});

			form.querySelectorAll("input[type='date']").forEach(function (input) {
				input.value = "";
			});
			form.querySelectorAll("input[type='hidden']").forEach(function (input) {
				input.value = "";
			});

			var localizedPlaceholder = '@SharedLocalizer["Date_Format"]'
			$("#openingDateDisplay, #closedDateDisplay").val(localizedPlaceholder);
		});

	</script>



	<!-- jQuery UI -->
	<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>

	<script>
		(function ($) {
			$.datepicker.regional['tr'] = {
				closeText: 'Kapat',
				prevText: 'Önceki',
				nextText: 'Sonraki',
				currentText: 'Bugün',
				ClearText: "Temizle",
				monthNames: ['Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran', 'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık'],
				monthNamesShort: ['Oca', 'Şub', 'Mar', 'Nis', 'May', 'Haz', 'Tem', 'Ağu', 'Eyl', 'Eki', 'Kas', 'Ara'],
				dayNames: ['Pazar', 'Pazartesi', 'Salı', 'Çarşamba', 'Perşembe', 'Cuma', 'Cumartesi'],
				dayNamesShort: ['Paz', 'Pzt', 'Sal', 'Çar', 'Per', 'Cum', 'Cmt'],
				dayNamesMin: ['Pz', 'Pt', 'Sa', 'Ça', 'Pe', 'Cu', 'Ct'],
				weekHeader: 'Hf',
				dateFormat: 'dd.mm.yy',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''
			};
		})(jQuery);
	</script>

	<script>
		// jQuery UI Datepicker'ın _gotoToday metodunu override ediyoruz
		$.datepicker._gotoToday = function (id) {
			var target = $(id);
			var inst = this._getInst(target[0]);
			var date = new Date();
			this._setDate(inst, date);
			this._hideDatepicker();

			// Tarihi input'a yaz
			const region = $.datepicker.regional['@System.Globalization.CultureInfo.CurrentUICulture.TwoLetterISOLanguageName'] || $.datepicker.regional['tr'];
			const formattedDate = $.datepicker.formatDate(region.dateFormat, date);
			target.val(formattedDate);

			// ISO formatlı gizli alanı da güncelle
			$("#closedDate").val(parseToIso(formattedDate, region.dateFormat));
			$("#openingDate").val(parseToIso(formattedDate, region.dateFormat));
		};

		$(function () {
			const culture = '@System.Globalization.CultureInfo.CurrentUICulture.TwoLetterISOLanguageName';
			const region = $.datepicker.regional[culture] || $.datepicker.regional['tr'];

			$.datepicker.setDefaults(region);

			$("#openingDateDisplay").datepicker({
				changeMonth: true,
				changeYear: true,
				showButtonPanel: true,
				closeText: region.closeText,
				currentText: region.currentText,
				onSelect: function (dateText) {
					$("#openingDate").val(parseToIso(dateText, region.dateFormat));
				},
				beforeShow: function (input, inst) {
					setTimeout(function () {
						var buttonPane = $(input).datepicker("widget").find(".ui-datepicker-buttonpane");
						var btn = $('<button>', {
							text: (culture === 'tr' ? "Temizle" : "Clear"),
							click: function (e) {
								e.preventDefault();
								const exampleFormat = (culture === 'tr') ? 'gg.aa.yyyy' : 'dd.mm.yyyy';
								$("#openingDateDisplay").val(exampleFormat);
								$("#openingDate").val('');
							},
							class: "ui-datepicker-clear ui-state-default ui-priority-primary ui-corner-all"
						});

						if (buttonPane.find(".ui-datepicker-clear").length === 0) {
							btn.appendTo(buttonPane);
						}
					}, 1);
				}
			});

			$("#closedDateDisplay").datepicker({
				changeMonth: true,
				changeYear: true,
				showButtonPanel: true,
				closeText: region.closeText,
				currentText: region.currentText,
				onSelect: function (dateText) {
					$("#closedDate").val(parseToIso(dateText, region.dateFormat));
				},
				beforeShow: function (input, inst) {
					setTimeout(function () {
						var buttonPane = $(input).datepicker("widget").find(".ui-datepicker-buttonpane");
						var btn = $('<button>', {
							text: (culture === 'tr' ? "Temizle" : "Clear"),
							click: function (e) {
								e.preventDefault();
								const exampleFormat = (culture === 'tr') ? 'gg.aa.yyyy' : 'dd.mm.yyyy';
								$("#closedDateDisplay").val(exampleFormat);
								$("#closedDate").val('');
							},
							class: "ui-datepicker-clear ui-state-default ui-priority-primary ui-corner-all"
						});

						if (buttonPane.find(".ui-datepicker-clear").length === 0) {
							btn.appendTo(buttonPane);
						}
					}, 1);
				}
			});

			var rawDate = '@(ViewBag.CreatedDate != null ? ((DateTime)ViewBag.CreatedDate).ToString(System.Globalization.CultureInfo.CurrentUICulture.TwoLetterISOLanguageName == "tr" ? "dd.MM.yyyy" : "MM/dd/yyyy") : "")';
			var localizedPlaceholder = '@SharedLocalizer["Date_Format"]';
			$("#openingDateDisplay").val(rawDate || localizedPlaceholder);
			$("#closedDateDisplay").val(rawDate || localizedPlaceholder);
		});

		function parseToIso(dateText, format) {
			if (!dateText || !format) return null;

			const separators = /[-./]/;
			const dateParts = dateText.split(separators);
			const formatParts = format.toLowerCase().split(separators);

			let day, month, year;

			for (let i = 0; i < formatParts.length; i++) {
				switch (formatParts[i]) {
					case 'dd':
					day = dateParts[i];
					break;
					case 'mm':
					month = dateParts[i];
					break;
					case 'yy':
					case 'yyyy':
					year = dateParts[i];
					break;
				}
			}

			if (!year || !month || !day) return null;

			return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;
		}
	</script>

}